<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">

<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<list name="import" mergeType="merge">
      <param>gLucifer</param>
</list>

<struct name="components" mergeType="merge">
	<!-- Camera View -->
	<struct name="perspectiveViewCamera">
	   <param name="Type">lucCamera</param>
		<param name="CentreFieldVariable">VelocityField</param>
      <param name="translateX">0.06</param>
      <param name="translateY">0.3</param>
      <param name="rotateX">42</param>
      <param name="rotateY">47</param>
   	<param name="autoZoomTimestep">1</param>
	</struct>	
	<struct name="topDownCamera">
		<param name="Type">lucCamera</param>
		<param name="CentreFieldVariable">VelocityField</param>
   	<param name="rotateX">90</param>
   	<param name="autoZoomTimestep">1</param>
	</struct>
	<!-- Colour Maps -->
	<struct name="strainRateColourMap">
		<param name="Type">lucColourMap</param>
		<param name="colours">#111111 #444444 yellow orange red</param>
		<param name="minimum">0.0</param>
		<param name="maximum">2.0</param>
		<param name="logScale">f</param>
		<param name="dynamicRange">f</param>		
	</struct>
	
	<struct name="brightnessColourMap">
		<param name="Type">lucColourMap</param>
		<param name="colours">Black:0.5 White:0.8</param>
		<!--param name="minimum">0.0</param>
		<param name="maximum">10.0</param-->
		<param name="logScale">False</param>
		<param name="dynamicRange">True</param>		
	</struct>	
	
	<struct name="faultingColourMapFaultsOnly">
		<param name="Type">lucColourMap</param>
		<param name="colours"> grey:0.0 white:0.5 yellow:0.5 </param>
		<param name="minimum">0.0</param>
		<param name="maximum">3.0</param>
		<param name="logScale">False</param>
		<param name="dynamicRange">False</param>		
	</struct>
	
	<struct name="faultingColourMap1">
		<param name="Type">lucColourMap</param>
		<param name="colours">#883322 #883322 #888822 #FFDDDD </param>
		<param name="minimum">0.0</param>
		<param name="maximum">3.0</param>
		<param name="logScale">False</param>
		<param name="dynamicRange">False</param>		
	</struct>	
	
	
	<struct name="faultingColourMap2">
		<param name="Type">lucColourMap</param>
		<param name="colours"> #BB9900 #BB9900 #BBBB00 #FFFFDD</param>
		<param name="minimum">0.0</param>
		<param name="maximum">3.0</param>
		<param name="logScale">False</param>
		<param name="dynamicRange">False</param>		
	</struct>	
	
	<struct name="strainRateInvSectionColourMap">
		<param name="Type">lucColourMap</param>
		<param name="colours">Grey:0.0 Yellow:0.2 Red</param>
		<param name="dynamicRange">False</param>
		<param name="minimum">0.0</param>
		<param name="maximum">5.0</param>
	</struct>
		
	<!-- Drawing Objects -->
	
	<struct name="strainRateInvSection1">
		<param name="Type">lucScalarFieldCrossSection</param>
		<param name="FieldVariable">StrainRateInvariantField</param>
		<param name="crossSection">y=0.66</param>
		<param name="ColourMap">strainRateInvSectionColourMap</param>
	</struct>


	
	<struct name="mantleSurfaceWithStrainRateInv">
		<param name="Type">lucIsosurface</param>
		<param name="IsosurfaceField">MantleField</param>
		<param name="ColourMap">strainRateColourMap</param>
		<param name="ColourField">StrainRateInvariantField</param>
		<param name="isovalue">0.5</param>
		<param name="drawWalls">true</param>
	</struct>			
	
	<!--struct name="brittleLayerSurfaceWithStrainRateInv">
		<param name="Type">lucIsosurface</param>
		<param name="IsosurfaceField">MarkerLayer1Field</param>
		<param name="ColourMap">faultingColourMap1</param>
		<param name="ColourField">StrainRateInvariantField</param>
		<param name="isovalue">0.5</param>
		<param name="drawWalls">true</param>7
	</struct-->			
	
	<!--struct name="brittleLayer2SurfaceWithStrainRateInv">
		<param name="Type">lucIsosurface</param>
		<param name="IsosurfaceField">MarkerLayer2Field</param>
		<param name="ColourMap">faultingColourMap2</param>
		<param name="ColourField">StrainRateInvariantField</param>
		<param name="isovalue">0.5</param>
		<param name="drawWalls">true</param>
	</struct-->			
	
	<struct name="topographySurface">
		<param name="Type">lucIsosurface</param>
		<param name="IsosurfaceField">CompressibleField</param>
		<param name="colour">LightBlue:0.5</param>
		<param name="isovalue">0.5</param>
		<param name="drawWalls">false</param>
	</struct>
	<struct name="faultSquares">
		<param name="Type">lucSwarmSquares</param>
		<param name="Swarm">materialSwarm</param>
		<param name="colour">white</param>
		<!--param name="OpacityVariable">materialSwarm-FaultingMoresiMuhlhaus2006Opacity</param-->
		<param name="ColourVariable">materialSwarm-FaultingMoresiMuhlhaus2006Brightness</param>
		<param name="ColourMap">brightnessColourMap</param>
		<param name="maskValue">1.0</param>
		<param name="maskType">GreaterThan</param>
		<param name="MaskVariable">materialSwarm-FaultingMoresiMuhlhaus2006Opacity</param>
		<param name="NormalVariable">materialSwarm-Director</param>
		<param name="PlaneVectorVariable">materialSwarm-SlipVector</param>
		<param name="LengthVariable">materialSwarm-FaultingMoresiMuhlhaus2006Length</param>
	</struct>
	<struct name="border">
		<param name="Type">lucFieldVariableBorder</param>
		<param name="FieldVariable">VelocityField</param>
	</struct>
	
	<struct name="strainRateColourBar">
		<param name="Type">lucColourBar</param>
		<param name="ColourMap">strainRateColourMap</param>
	</struct>
	
	
	<!--
	<struct name="material0">
			<param name="Type">lucSwarmRGBColourViewer</param>
			<param name="Swarm">materialSwarm</param>
			<param name="colour">purple</param>
			<param name="pointSize">2.0</param>
			<param name="MaskVariable">materialSwarm-MaterialIndex</param>
			<param name="maskType">EqualTo</param>
			<param name="maskValue">0.0</param>		
	</struct>
	
	<struct name="material1">
			<param name="Type">lucSwarmRGBColourViewer</param>
			<param name="Swarm">materialSwarm</param>
			<param name="colour">blue</param>
			<param name="pointSize">2.0</param>
			<param name="MaskVariable">materialSwarm-MaterialIndex</param>
			<param name="maskType">EqualTo</param>
			<param name="maskValue">1.0</param>		
	</struct>	
	
	
	<struct name="material2">
			<param name="Type">lucSwarmRGBColourViewer</param>
			<param name="Swarm">materialSwarm</param>
			<param name="ColourVariable">materialSwarm-SlipRate</param>
			<param name="ColourMap">faultingColourMapFaultsOnly</param>
			<param name="pointSize">1.0</param>
			<param name="MaskVariable">materialSwarm-MaterialIndex</param>
			<param name="maskType">EqualTo</param>
			<param name="maskValue">2.0</param>		
	</struct>
	-->
	
	<struct name="material3">
			<param name="Type">lucSwarmViewer</param>
			<param name="Swarm">materialSwarm</param>
			<param name="ColourVariable">materialSwarm-SlipRate</param>
			<param name="ColourMap">faultingColourMap1</param>
			<param name="pointSize">3.0</param>
			<param name="MaskVariable">materialSwarm-MaterialIndex</param>
			<param name="maskType">EqualTo</param>
			<param name="maskValue">3.0</param>		
	</struct>	
	
	<struct name="material4">
			<param name="Type">lucSwarmViewer</param>
			<param name="Swarm">materialSwarm</param>
			<param name="ColourVariable">materialSwarm-SlipRate</param>
			<param name="ColourMap">faultingColourMap2</param>
			<param name="pointSize">3.0</param>
			<param name="MaskVariable">materialSwarm-MaterialIndex</param>
			<param name="maskType">EqualTo</param>
			<param name="maskValue">4.0</param>		
	</struct>	
	
		
		<struct name="border" mergeType="replace">
			<param name="Type">lucFieldVariableBorder</param>
			<param name="FieldVariable">StrainRateInvariantField</param>
		</struct>
		
		<struct name="strainRateInvColourBarYZ">
			<param name="Type">lucColourBar</param>
			<param name="ColourMap">strainRateInvSectionColourMap</param>
		</struct>
	
	<!-- Create Viewports -->
	<struct name="PerpsectiveViewport">
		<param name="Type">lucViewport</param>
		<param name="Camera">perspectiveViewCamera</param>
		<param name="compositeEachObject">true</param>
		<list name="DrawingObject">
			<param>mantleSurfaceWithStrainRateInv</param>
			<param>border</param>
			<param>strainRateInvSection1</param>
			<!--param>material2</param-->
			<param>material3</param>
			<param>material4</param>
			<!--param>topographySurface</param-->
			<!--param>strainRateColourBar</param-->
		</list>
	</struct>
	
	
	
	<struct name="TopDownViewport">
		<param name="Type">lucViewport</param>
		<param name="Camera">topDownCamera</param>
		<param name="compositeEachObject">true</param>
		<list name="DrawingObject">
			<param>mantleSurfaceWithStrainRateInv</param>
			<param>faultSquares</param>
			<param>border</param>
			<param>topographySurface</param>
			<param>strainRateColourBar</param>
		</list>
	</struct>
	
	<!--
	<struct name="movie">
		<param name="Type">lucDefaultVideoOutput</param>
		<param name="Window">PerspectiveWindow</param>
	</struct> -->
	
	<!--
	<struct name="movie2">
		<param name="Type">lucDefaultVideoOutput</param>
		<param name="Window">TopDownWindow</param>
	</struct>
    -->
	
	
</struct>

<include>ExtensionWindows.xml</include>

</StGermainData>
