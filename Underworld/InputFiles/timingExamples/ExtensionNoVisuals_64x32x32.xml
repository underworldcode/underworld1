<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">
<!--

	A 3D extension model for timing purposes which runs 20 timesteps with no visualisation. 
	This case is large enough to allow some decomposition, but small enough to run on modest, single proc machines
	The choice of physical parameterization is not special but should not be changed.
	 
	
Some rough timings - 
-- PETSC defaults (GMRES)
	1 proc, 2 GHz Intel Core 2 duo MacOS X laptop 	-  9214s / ~1 GB real mem usage
	2 proc, 2 GHz Intel Core 2 duo MacOS X laptop 	-  6345s / ~1 GB real mem usage
	1 proc, 2.5 GHz Quad G5 MacOS X desktop			-  7750s / ~1 GB real mem usage
	2 proc, 2.5 GHz Quad G5 MacOS X desktop			-  4850s / ~1 GB real mem usage
	4 proc, 2.5 GHz Quad G5 MacOS X desktop			-  ????s / ~1 GB real mem usage  
						(PETSc at 13 steps - extrapolated completion time - 3000s)
		
-- Using 10 particles per cell instead of 20 and with PCDVC
	
	1 proc, 2 GHz Intel Core 2 duo MacOS X laptop 	-  7700s / ~0.75 GB real mem usage
	2 proc, 2 GHz Intel Core 2 duo MacOS X laptop 	-  5500s / ~0.75 GB real mem usage
	
	
	
-->
	<include> Underworld/BaseApps/ExtensionBaseApp.xml </include>
	<list name="plugins" mergeType="merge">
<!-- Output Plugins -->
		<param>StgFEM_FrequentOutput</param>
		<param>Underworld_Vrms</param>
		<param>StgFEM_CPUTime</param>
	</list>
<!-- Rheology Components -->
	<struct name="components" mergeType="merge">
<!-- Shape Stuff -->
		<struct name="backgroundShape">
			<param name="Type">Everywhere</param>
		</struct>
		<struct name="incompressibleShape">
			<param name="Type">Box</param>
			<param name="startX"> minX </param>
			<param name="endX"> maxX </param>
			<param name="startY"> 0.8 </param>
			<param name="endY"> 0.85 </param>
			<param name="startZ"> minZ </param>
			<param name="endZ"> maxZ </param>
		</struct>
		<struct name="crustShape">
			<param name="Type">Box</param>
			<param name="startX"> minX </param>
			<param name="endX"> maxX </param>
			<param name="startY"> 0.4 </param>
			<param name="endY"> 0.8 </param>
			<param name="startZ"> minZ </param>
			<param name="endZ"> maxZ </param>
		</struct>
		<struct name="weakZoneShape1">
			<param name="Type">Box</param>
			<param name="startX"> 0.775 </param>
			<param name="endX"> 0.825 </param>
			<param name="startY"> 0.4 </param>
			<param name="endY"> 0.45 </param>
			<param name="startZ"> minZ </param>
			<param name="endZ"> 0.66666 </param>
		</struct>
		<struct name="weakZoneShape2">
			<param name="Type">Box</param>
			<param name="startX"> 1.175 </param>
			<param name="endX"> 1.225 </param>
			<param name="startY"> 0.4 </param>
			<param name="endY"> 0.45 </param>
			<param name="startZ"> 1.33333 </param>
			<param name="endZ"> maxZ </param>
		</struct>
		<struct name="weakZoneShape">
			<param name="Type">Union</param>
			<list name="shapes">
				<param>weakZoneShape1</param>
				<param>weakZoneShape2</param>
			</list>
		</struct>
		<struct name="crustShape2">
			<param name="Type">Intersection</param>
			<list name="shapes">
				<param>crustShape</param>
				<param>!weakZoneShape</param>
			</list>
		</struct>
		<struct name="mantleShape">
			<param name="Type">Box</param>
			<param name="startX"> minX </param>
			<param name="endX"> maxX </param>
			<param name="startY"> 0.0 </param>
			<param name="endY"> 0.4 </param>
			<param name="startZ"> minZ </param>
			<param name="endZ"> maxZ </param>
		</struct>
		<struct name="mantleShape2">
			<param name="Type">Union</param>
			<list name="shapes">
				<param>mantleShape</param>
				<param>weakZoneShape</param>
			</list>
		</struct>
<!-- Material Stuff -->
		<struct name="backgroundViscosity">
			<param name="Type">MaterialViscosity</param>
			<param name="eta0">1.0e-1</param>
		</struct>
		<struct name="compresibility">
			<param name="Type">Compressible</param>
			<param name="GeometryMesh">mesh-linear</param>
			<param name="StiffnessMatrix">c_matrix</param>
			<param name="Swarm">picIntegrationPoints</param>
			<param name="oneOnLambda">10.0</param>
		</struct>
		<struct name="background">
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">backgroundShape</param>
<!--param name="density">0.0</param-->
			<param name="Compressible">compresibility</param>
			<param name="Rheology">backgroundViscosity</param>
		</struct>
		<struct name="incompressible">
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">incompressibleShape</param>
<!--param name="density">0.0</param-->
			<param name="Rheology">backgroundViscosity</param>
		</struct>
<!-- Crust Rheology -->
		<struct name="crustViscosity">
			<param name="Type">MaterialViscosity</param>
			<param name="eta0">10.000</param>
		</struct>
		<struct name="strainWeakening" mergeType="replace">
			<param name="Type">StrainWeakening</param>
			<param name="TimeIntegrator">timeIntegrator</param>
			<param name="MaterialPointsSwarm">materialSwarm</param>
			<param name="softeningStrain">0.1</param>
			<param name="initialDamageFraction">0.05</param>
			<param name="initialDamageWavenumber">0.5</param>
			<param name="initialDamageFactor">1.0</param>
			<param name="healingRate">0.01</param>
		</struct>
		<struct name="yielding" mergeType="replace">
			<param name="Type">FaultingMoresiMuhlhaus2006</param>
			<param name="PressureField">PressureField</param>
			<param name="VelocityGradientsField">VelocityGradientsField</param>
			<param name="MaterialPointsSwarm">materialSwarm</param>
			<param name="Director">director</param>
			<param name="Context">context</param>
			<param name="StrainWeakening">strainWeakening</param>
			<param name="cohesion">15.0</param>
			<param name="cohesionAfterSoftening">1.0</param>
			<param name="frictionCoefficient">0.5</param>
			<param name="frictionCoefficientAfterSoftening">0.01</param>
			<param name="minimumYieldStress">0.0001</param>
			<param name="ignoreOldOrientation">false</param>
		</struct>
		<struct name="director">
			<param name="Type">Director</param>
			<param name="TimeIntegrator">timeIntegrator</param>
			<param name="VelocityGradientsField">VelocityGradientsField</param>
			<param name="MaterialPointsSwarm">materialSwarm</param>
			<param name="initialDirectionX">0.0</param>
			<param name="initialDirectionY">1.0</param>
			<param name="initialDirectionZ">0.0</param>
			<param name="dontUpdate">True</param>
		</struct>
		<struct name="crust">
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">crustShape2</param>
<!--param name="density">1.0</param-->
			<list name="Rheology">
				<param>crustViscosity</param>
				<param>yielding</param>
			</list>
		</struct>
		<struct name="mantleViscosity">
			<param name="Type">MaterialViscosity</param>
			<param name="eta0">1.000</param>
		</struct>
		<struct name="mantle">
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">mantleShape2</param>
<!--	<param name="density">1.1</param>-->
<!-- Rheology Stuff -->
			<param name="Rheology">mantleViscosity</param>
		</struct>
<!-- Mantle Field Stuff -->
		<struct name="MantleField">
			<param name="Type">MaterialFeVariable</param>
			<param name="Swarm">picIntegrationPoints</param>
			<param name="Material">mantle</param>
			<param name="Context">context</param>
			<param name="Mesh">mesh-linear</param>
		</struct>
<!-- Compressible Field Stuff -->
		<struct name="CompressibleField">
			<param name="Type">MaterialFeVariable</param>
			<param name="Swarm">picIntegrationPoints</param>
			<param name="Material">background</param>
			<param name="Context">context</param>
			<param name="Mesh">mesh-linear</param>
		</struct>
	</struct>
<!-- Simulation control -->
	<param name="maxTimeSteps"> 20 </param>
	<param name="outputPath"> ./OutputFiles/ExtensionTimingExampleNoViz_64x32x32 </param>
	<param name="dumpEvery"> 1 </param>
	<param name="checkpointEvery" mergeType="replace"> 5 </param>
<!-- Non-linear stuff -->
	<param name="nonLinearMaxIterations"> 20 </param>
<!-- Journal Control -->
	<param name="journal.info.Context-verbose">True</param>
	<param name="journal-level.info.Stg_ComponentFactory">2</param>
	<param name="journal.debug">t</param>
	<param name="journal-enable-branch.debug.StgFEM">t</param>
	<param name="journal-enable-branch.debug.lucDebug">t</param>
	<param name="journal-level-branch.debug.lucDebug">2</param>
	<param name="journal-level-branch.debug.StgFEM"> 2 </param>
	
<!-- Geometry & Mesh setup -->
	<param name="dim"> 3 </param>
	
<!-- Note : for proper resolution of the problem, it is strongly recommended you run
	     this problem in parallel, with at least 100 * 50 * 100 elements. The values below are for
	     small testing / demonstration only. -->
	
	
	<param name="elementResI"> 64 </param>
	<param name="elementResJ"> 32 </param>
	<param name="elementResK"> 32 </param>
	<param name="shadowDepth"> 1 </param>
	<param name="minX"> 0.0 </param>
	<param name="minY"> 0.0 </param>
	<param name="minZ"> 0.0 </param>
	<param name="maxX"> 2.0 </param>
	<param name="maxY"> 1.0 </param>
	<param name="maxZ"> 1.0 </param>
	<param name="allowUnbalancing"> True </param>
	<param name="particlesPerCell"> 10 </param>
	<param name="cellParticleCount"> 10 </param>
	<param name="seed"> 13 </param>
	
<!-- Set up BCs and ICs -->
	<include> Underworld/VariableConditions/velocityBCs.extension.xml </include>
	
<!-- Visualisation SWITCHED OFF  -->
<!-- include>Underworld/Viewports/Extension3DVP.xml <include-->

<!-- Reasonable tolerance values given the mesh resolution -->

	<struct name="components" mergeType="merge">
		<struct name="uzawa" mergeType="merge">
			<param name="tolerance" mergeType="replace">5.0e-3</param>
			<param name="maxIterations" mergeType="replace">1000</param>
			<param name="useAbsoluteTolerance" mergeType="replace">False</param>
		</struct>
	</struct>
	<param name="nonLinearTolerance" mergeType="replace"> 0.033	</param>
	<param name="killNonConvergent" mergeType="replace"> f 	</param>
	<param name="nonLinearMaxIterations" mergeType="replace"> 10	</param>
</StGermainData>
