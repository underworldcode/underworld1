<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<!-- A StGermain input file -->
<!-- DTD to validate against -->
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

	<list name="plugins" mergeType="merge">
		<param>StgFEM_CompareFeVariables</param>
	</list>

	<param name="compareFeVariablesFilename">variableComparison.dat</param>
	<param name="journal-level.info.StgFEM_CompareFeVariables"> 2 </param>
	<list name="compareFeVariables">
		<asciidata>
			<columnDefinition name = "FeVariable1" type="string"/>
			<columnDefinition name = "FeVariable2" type="string"/>
			<columnDefinition name = "tolerance" type="double"/>
			AnalyticVelocityField VelocityField 0.015
		</asciidata>
	</list>

	<!-- VelocityField Stuff -->
	<struct name="components" mergeType="merge">
		<struct name="analyticVelocity">
			<param name="Type">Variable</param>
			<param name="Rank">Vector</param>
			<param name="Dependency">decomp-linear</param>
			<param name="DataType">Double</param>
			<param name="Count">decomp-linear-nodeDomainCount</param>
			<param name="VectorComponentCount">dim</param>
			<list name="names">
				<param>analyticVx</param>
				<param>analyticVy</param>
				<param>analyticVz</param>
			</list>
		</struct>
		<struct name="analyticVelocityICs">
			<param name="Type">CompositeVC</param>
			<param name="Data">mesh-linear</param>
		</struct>		
		<struct name="analyticVelocityDofLayout">
			<param name="Type">DofLayout</param>
			<param name="Count">decomp-linear-nodeDomainCount</param>
			<param name="BaseVariableCount">dim</param>
			<list name="BaseVariables">
				<param>analyticVx</param>
				<param>analyticVy</param>
				<param>analyticVz</param>
			</list>
		</struct>		
		<struct name="AnalyticVelocityField">
			<param name="Type">FeVariable</param>
			<param name="FEMesh">mesh-linear</param>
			<param name="DofLayout">analyticVelocityDofLayout</param>
			<param name="IC">analyticVelocityICs</param>
		</struct>
	</struct>


	<struct name="analyticVelocityICs" mergeType="replace">
		<param name="type">CompositeVC</param>
		<list name="vcList">
			<struct>
				<param name="type"> AllNodesVC </param>
				<list name="variables">
					<struct>
						<param name="name">analyticVx</param>
						<param name="type">func</param>
						<param name="value"> AnalyticLidDrivenVx </param>
					</struct>
					<struct>
						<param name="name">analyticVy</param>
						<param name="type">func</param>
						<param name="value"> AnalyticLidDrivenVy </param>
					</struct>
				</list>
			</struct>
		</list>
	</struct>
	
	<struct name="components" mergeType="merge">
		<struct name="analyticPressure">
			<param name="Type">Variable</param>
			<param name="Rank">Scalar</param>
			<param name="Dependency">decomp-constant</param>
			<param name="DataType">Double</param>
			<param name="Count">decomp-constant-nodeDomainCount</param>
		</struct>
		<struct name="analyticPressureDofLayout">
			<param name="Type">DofLayout</param>
			<param name="Count">decomp-constant-nodeDomainCount</param>
			<list name="BaseVariables">
				<param>analyticPressure</param>
			</list>
		</struct>		
		<struct name="analyticPressureICs">
			<param name="Type">CompositeVC</param>
			<param name="Data">mesh-constant</param>
		</struct>			
		<struct name="AnalyticPressureField">
			<param name="Type">FeVariable</param>
			<param name="FEMesh">mesh-constant</param>
			<param name="DofLayout">analyticPressureDofLayout</param>
			<param name="IC">analyticPressureICs</param>
		</struct>
	</struct>


	<struct name="analyticPressureICs" mergeType="replace">
		<param name="type">CompositeVC</param>
		<list name="vcList">
			<struct>
				<param name="type"> AllNodesVC </param>
				<list name="variables">
					<struct>
						<param name="name">analyticPressure</param>
						<param name="type">func</param>
						<param name="value"> AnalyticLidDrivenPressure </param>
					</struct>
				</list>
			</struct>
		</list>
	</struct>


	<!-- Velocity BCs -->
	<struct name="velocityBCs" mergeType="replace">
		<param name="type">CompositeVC</param>
		<list name="vcList">
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> bottom </param>
				<list name="variables">
					<struct>
						<param name="name">vx</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
					<struct>
						<param name="name">vy</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> left </param>
				<list name="variables">
					<struct>
						<param name="name">vx</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> right </param>
				<list name="variables">
					<struct>
						<param name="name">vx</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> front </param>
				<list name="variables">
					<struct>
						<param name="name">vz</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> back </param>
				<list name="variables">
					<struct>
						<param name="name">vz</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
			<struct>
				<param name="type"> WallVC </param>
				<param name="wall"> top </param>
				<list name="variables">
					<struct>
						<param name="name">vx</param>
						<param name="type">func</param>
						<param name="value"> AnalyticLidDrivenVx </param>
					</struct>
					<struct>
						<param name="name">vy</param>
						<param name="type">double</param>
						<param name="value"> 0 </param>
					</struct>
				</list>
			</struct>
		</list>
	</struct>
</StGermainData>
