<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">

<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

   <list name="import">
      <param>Underworld</param>
   </list>

   <struct name="components" mergeType="merge">
      <struct name="context">
         <param name="Type">UnderworldContext</param>
      </struct>
   </struct>

   <include>Underworld/BaseApps/ThermoChem.xml</include>

   <param name="FeVariableListPrintToFile">True</param>
   <param name="extensionReferenceHeight">1.0</param>
   <param name="pressureCalibrationReferenceHeight">1.0</param>
   
   <list name="plugins" mergeType="merge">
      <struct>
         <param name="Type">StgFEM_FrequentOutput</param>
         <param name="Context">context</param>
      </struct>
      <struct>
         <param name="Type">Underworld_Vrms</param>
         <param name="Context">context</param>
         <param name="GaussSwarm">gaussSwarm</param>
         <param name="VelocityField">VelocityField</param>
      </struct>
      <struct>
         <param name="Type">StgFEM_CPUTime</param>
         <param name="Context">context</param>
      </struct>
      <struct>
         <param name="Type">Underworld_Nusselt</param>
         <param name="Context">context</param>
         <param name="GaussSwarm">gaussSwarm</param>
      </struct>
      <struct>
         <param name="Type">Underworld_MaxVelocity</param>
         <param name="Context">context</param>
      </struct>
      <struct>
         <param name="Type">Underworld_MaxTemperature</param>
         <param name="Context">context</param>
      </struct>
      <!--
      <struct>
         <param name="Type">Underworld_Mobility</param>
         <param name="Context">context</param>
         <param name="GaussSwarm">gaussSwarm</param>
         <param name="VelocityField">VelocityField</param>
      </struct>
      -->
      <struct>
         <param name="Type">Underworld_BoundaryLayers</param>
         <param name="Context">context</param>
      </struct>
      <struct>
         <param name="Type">StgFEM_FeVariableList</param>
         <param name="Context">context</param>
      </struct>
      <struct>
         <param name="Type">Underworld_PressureCalibration</param>
         <param name="Context">context</param>
      </struct>
   </list>

   <struct name="components" mergeType="merge">
      <!-- Replace the standard Constitutive Matrix with ViscousPenaltyConstMatrixCartesian -->
      
      <!-- <struct name="constitutiveMatrix" mergeType="replace">
         <param name="Type">ViscousPenaltyConstMatrixCartesian</param>
         <param name="Swarm">picIntegrationPoints</param>
         <param name="StiffnessMatrix">k_matrix</param>
         <param name="incompressibility_Penalty">10.0</param>
      </struct> 
      <element type="struct" name="stokesEqn" mergeType="replace">
          <element type="param" name="Type">Stokes_SLE</element>
          <element type="param" name="SLE_Solver">uzawa</element>
          <element type="param" name="Context">context</element>
          <element type="param" name="StressTensorMatrix">k_matrix</element>
          <element type="param" name="GradientMatrix">g_matrix</element>
          <element type="param" name="DivergenceMatrix"></element>
          <element type="param" name="CompressibilityMatrix">c_matrix</element>
          <element type="param" name="VelocityVector">solutionVelocity</element>
          <element type="param" name="PressureVector">solutionPressure</element>
          <element type="param" name="ForceVector">mom_force</element>
          <element type="param" name="ContinuityForceVector">cont_force</element>
          <element type="param" name="killNonConvergent">false</element>
          <element type="param" name="nonLinearMaxIterations">nonLinearMaxIterations</element>
          <element type="param" name="nonLinearTolerance">nonLinearTolerance</element>
          <element type="param" name="makeConvergenceFile">false</element>
      </element> -->
    
      <!-- I think we only need one of these to add heating to all materials -->
      <struct name="internalHeatingTerm">
         <param name="Type">RadiogenicHeatingTerm</param>
         <param name="ForceVector">residual</param>
         <param name="Swarm">gaussSwarm</param>
      </struct>
      <struct name="temperatureDependence">
         <param name="Type">Arrhenius</param>
         <param name="TemperatureField">TemperatureField</param>
         <param name="eta0">1.0e-6</param>
         <param name="activationEnergy">27.63102112</param>
      </struct>
      <struct name="temperatureDependence2">
         <param name="Type">Arrhenius</param>
         <param name="TemperatureField">TemperatureField</param>
         <param name="eta0">1.0e-3</param>
         <param name="activationEnergy">27.63102112</param>
      </struct>
      <struct name="shape">
         <param name="Type">Everywhere</param>
      </struct>
      <struct name="box-shape">
         <param name="Type">Box</param>
         <param name="startX">cBlockX1</param><param name="endX">cBlockX2</param>
         <param name="startZ">cBlockZ1</param><param name="endZ">cBlockZ2</param>
         <param name="startY">cBlockY1</param><param name="endY">cBlockY2</param>
      </struct>
      <struct name="box-shape-2">
         <param name="Type">Box</param>
         <param name="startX">c2BlockX1</param><param name="endX">c2BlockX2</param>
         <param name="startZ">c2BlockZ1</param><param name="endZ">c2BlockZ2</param>
         <param name="startY">c2BlockY1</param><param name="endY">c2BlockY2</param>
      </struct>
      <struct name="box-shape-3">
         <param name="Type">Box</param>
         <param name="startX">c3BlockX1</param><param name="endX">c3BlockX2</param>
         <param name="startZ">c3BlockZ1</param><param name="endZ">c3BlockZ2</param>
         <param name="startY">c3BlockY1</param><param name="endY">c3BlockY2</param>
      </struct>
      <struct name="box-shape-4">
         <param name="Type">Box</param>
         <param name="startX">c4BlockX1</param><param name="endX">c4BlockX2</param>
         <param name="startZ">c4BlockZ1</param><param name="endZ">c4BlockZ2</param>
         <param name="startY">c4BlockY1</param><param name="endY">c4BlockY2</param>
      </struct>

      <struct name="bc-box-shape">
         <param name="Type">Box</param>
         <param name="startX">cBlockX1</param><param name="endX">cBlockX2</param>
         <param name="startZ">cBlockZ1</param><param name="endZ">cBlockZ2</param>
         <param name="startY">bcBlockY1</param><param name="endY">bcBlockY2</param>
      </struct>
      <struct name="bc-box-shape-2">
         <param name="Type">Box</param>
         <param name="startX">c2BlockX1</param><param name="endX">c2BlockX2</param>
         <param name="startZ">c2BlockZ1</param><param name="endZ">c2BlockZ2</param>
         <param name="startY">bcBlockY1</param><param name="endY">bcBlockY2</param>
      </struct>
      <struct name="bc-box-shape-3">
         <param name="Type">Box</param>
         <param name="startX">c3BlockX1</param><param name="endX">c3BlockX2</param>
         <param name="startZ">c3BlockZ1</param><param name="endZ">c3BlockZ2</param>
         <param name="startY">bcBlockY1</param><param name="endY">bcBlockY2</param>
      </struct>
      <struct name="bc-box-shape-4">
         <param name="Type">Box</param>
         <param name="startX">c4BlockX1</param><param name="endX">c4BlockX2</param>
         <param name="startZ">c4BlockZ1</param><param name="endZ">c4BlockZ2</param>
         <param name="startY">bcBlockY1</param><param name="endY">bcBlockY2</param>
      </struct>





     <struct name="box-shapes-union">
         <param name="Type">Union</param>
         <list name="shapes">
            <param>box-shape</param>
            <param>box-shape-2</param>
            <param>box-shape-3</param>
            <param>box-shape-4</param>
         </list>
      </struct>
      <struct name="material">
         <param name="Type">RheologyMaterial</param>
         <param name="Shape">shape</param>
         <param name="density">1.0</param>
         <param name="alpha">1.0</param>
         <list name="Rheology">
            <param>temperatureDependence</param>
         <!--   <param>yielding</param>--><!-- Not needed for the isoviscous run -->
         </list>
         <list name="heatingElements">
            <struct>
               <param name="Q">0.0</param>
               <param name="lambda">0.0</param>
            </struct>
            <!-- And to add another one ... 
            <struct>
               <param name="Q">1.0</param>
               <param name="lambda">0.0</param>
            </struct>
            -->
         </list>
      </struct>
      <struct name="lightMaterial">
         <param name="Type">RheologyMaterial</param>
         <param name="Shape">box-shapes-union</param>
         <param name="density">0.0</param>
         <param name="alpha">1.0</param>
         <list name="Rheology">
            <param>temperatureDependence2</param>
            <!--><param>yielding2</param>-->
         </list>
         <list name="heatingElements">
            <struct>
               <param name="Q">0.0</param>
               <param name="lambda">0.0</param>
            </struct>
            <!-- And to add another one ... 
            <struct>
               <param name="Q">0.0</param>
               <param name="lambda">0.0</param>
            </struct>
            -->
         </list>
      </struct>
      <struct name="strainWeakening">
         <!--This component is used by plastic rheology
         it defines the strain weakening behaviour of the
         material see component documentation for more details-->
         <param name="Type">StrainWeakening</param>
         <param name="TimeIntegrator">timeIntegrator</param>
         <param name="MaterialPointsSwarm">materialSwarm</param>
         <param name="softeningStrain">0.1</param>
         <param name="initialDamageFraction">0.0</param>
         <param name="initialDamageWavenumber">0.33333</param>
         <param name="initialDamageFactor">0.1</param>
         <param name="healingRate">0.0</param>
      </struct>
      <struct name="yielding">
         <!--Mechanical properties of the plastic rheology
         see component documentation for more details-->
         <param name="Type">DruckerPrager</param>
         <param name="StrainWeakening">strainWeakening</param>
         <param name="PressureField">PressureField</param>
         <param name="MaterialPointsSwarm">materialSwarm</param>
         <param name="StrainRateField">StrainRateField</param>
         <param name="Context">context</param>
         <param name="cohesion">1.0e5</param>
         <param name="cohesionAfterSoftening">5.0e4</param>
         <param name="frictionCoefficient">0.1</param>
         <param name="frictionCoefficientAfterSoftening">0.1</param>
         <param name="minimumYieldStress">1.0e3</param>
      </struct>
      <struct name="yielding2">
         <!--Mechanical properties of the plastic rheology
         see component documentation for more details-->
         <param name="Type">DruckerPrager</param>
         <param name="StrainWeakening">strainWeakening</param>
         <param name="PressureField">PressureField</param>
         <param name="MaterialPointsSwarm">materialSwarm</param>
         <param name="StrainRateField">StrainRateField</param>
         <param name="Context">context</param>
         <param name="cohesion">5.0e5</param>
         <param name="cohesionAfterSoftening">5.0e4</param>
         <param name="frictionCoefficient">0.5</param>
         <param name="frictionCoefficientAfterSoftening">0.5</param>
         <param name="minimumYieldStress">1.0e3</param>
      </struct>
   </struct><!-- End of components list -->

   <!-- Simulation control -->
   <param name="maxTimeSteps">5</param>
   <param name="outputPath">./output</param>
   <param name="dumpEvery">1</param>
   <param name="checkpointEvery">0</param>

   <!--   choose what to checkpoint
   <list name="FieldVariablesToCheckpoint">
      <param>VelocityField</param>
      <param>VelocityGradientsField</param>
   </list>
   -->

   <!--  restart from a previous checkpoint 
   <param name="restartTimestep">10</param>
   -->
   
   <param name="gravity">1e6</param>
   
   <param name="courantFactor">0.5</param>
   
   <!-- Integration Scheme configuration -->
   <param name="particlesPerCell">10</param>
   
   <!-- Journal Control -->
   <param name="journal.info.Context-verbose">True</param>
   <param name="journal-level.info.Stg_ComponentFactory">2</param>
   <param name="journal-level.info.lucInfo">2</param>
   <param name="journal-level.debug.lucDebug">1</param>
   <param name="journal-enable-branch.debug.lucDebug">t</param>
   <param name="journal.debug">f</param>
   <param name="journal-enable-branch.debug.StgFEM">t</param>
   <param name="journal-level-branch.debug.StgFEM">2</param>
   <param name="journal.debug.Plugin">t</param>
   
   <!-- Geometry & Mesh setup -->
   <param name="dim">2</param>
   <param name="elementResI">64</param>
   <param name="elementResJ">64</param>
   <param name="elementResK">1</param>
   <param name="shadowDepth">1</param>
   <param name="minX">-1.0</param>
   <param name="minY">-1.0</param>
   <param name="minZ">-1.0</param>
   <param name="maxX">1.0</param>
   <param name="maxY">1.0</param>
   <param name="maxZ">1.0</param>
   <param name="allowUnbalancing">True</param>
   
   <!-- "Continent" block shape -->
   <param name="cBlockX1">-0.5</param>
   <param name="cBlockX2">0.5</param>
   <param name="cBlockZ1">-0.5</param>
   <param name="cBlockZ2">0.5</param>
   <param name="cBlockY1">0.9</param>
   <param name="cBlockY2">1.0</param>
 
   <param name="bcBlockY1">0.995</param>
   <param name="bcBlockY2">1.0  </param>

   <!-- Set up BCs and ICs -->
   <include>Underworld/VariableConditions/temperatureBCs.xml</include>
   <include>Underworld/VariableConditions/temperatureICs.sinusoid.xml</include>
   <include>Underworld/VariableConditions/velocityBCs.freeslip.xml</include>
   
   <!-- NOTE: he periodic boundary conditions from the BaseApps directory will override the boundary conditions -->

   <!-- This does the setup for visualization, but you need to add the actual Window files and a camera to see anything -->
   
   <!--><include>./gLuciferFiles/StandardgLuciferViz.xml</include>-->
   
   <struct name="components" mergeType="merge">
      <element type="struct" name="weights" mergeType="replace">
         <element type="param" name="Type">PCDVC</element>
         <element type="param" name="lowerT">0.3</element>
         <element type="param" name="upperT">25</element>
         <element type="param" name="maxDeletions">3</element>
         <element type="param" name="maxSplits">5</element>
         <element type="param" name="MaterialPointsSwarm">materialSwarm</element>
         <element type="param" name="resolution">12</element>
         <element type="param" name="splitInInterfaceCells">true</element>
         <element type="param" name="deleteInInterfaceCells">false</element>
         <element type="param" name="Inflow">false</element>
         <element type="param" name="Threshold">0.5</element>
         <element type="param" name="CentPosRatio">0.01</element>
      </element>
   </struct>

   <!-- This should be just a surface boundary condition, not a box -->

   <!-- Insert the blocks into the boundary conditions if they are to be completely fixed in place -->
   <struct name="velocityBCs" mergeType="merge">
      <param name="type">CompositeVC</param>
      <list name="vcList">
         <struct>
            <param name="type">MeshShapeVC</param>
            <param name="Shape">box-shapes-union</param>
            <list name="variables">
               <struct>
                  <param name="name">vx</param>
                  <param name="type">double</param>
                  <param name="value">0.0</param>
               </struct>
               <struct>
                  <param name="name">vy</param>
                  <param name="type">double</param>
                  <param name="value">0.0</param>
               </struct>
               <struct>
                  <param name="name">vz</param>
                  <param name="type">double</param>
                  <param name="value">0.0</param>
               </struct>
            </list>
         </struct>
      </list>
   </struct>

   <!-- Fix the particles for simulations which have no history tracking (but which we might
   want to restart with history switched on) -->

   <struct name="components" mergeType="merge">
      <struct name="materialSwarmAdvector" mergeType="replace">
         <param name="Type">SwarmAdvectionIJK</param>
         <param name="Swarm">materialSwarm</param>
         <param name="TimeIntegrator">timeIntegrator</param>
         <param name="VelocityField">VelocityField</param>
         <param name="PeriodicBCsManager">periodicBCsManager</param>
         <param name="allowFallbackToFirstOrder">True</param>
         <param name="suppressAxisI">True</param>
         <param name="suppressAxisJ">True</param>
         <param name="suppressAxisK">True</param>
      </struct>
   </struct>

   <!-- if the decomposition is extreme then internal bc's might result in no degrees of freedom 
   on some processes. This might be fixed by changing the decomposition to 2D or perhaps 
   just leaving the bc's in the matrix might be enough -->
      <!--><struct name="linearMeshGenerator" mergeType="merge">
         <param name="maxDecomposedDims">2</param>
         <list name="maxDecompositions">
            <param>0</param>
            <param>1</param>
            <param>0</param>
         </list>
   </struct>-->

   <struct name="components" mergeType="merge">
      <struct name="VelocityField" mergeType="merge">
          <param name="removeBCs" mergeType="replace">false</param>
      </struct>
   </struct>

</StGermainData>
