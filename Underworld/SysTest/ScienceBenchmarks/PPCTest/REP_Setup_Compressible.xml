<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">

<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

   <!-- 
   Notes:
   Output FEM Fields due to this algorithm are:

   recoveredEpsDotField - recovered strain rate field
   recoveredSigmaField - recovered total stress field
   recoveredTauField - recovered deviatoric stress field
   recoveredPressureField - recovered pressure field

   recoveredEpsDotInvariantField - invariant of recovered strain rate field
   recoveredSigmaInvariantField - invariant of recovered total stress field
   recoveredTauInvariantField - invariant of recovered deviatoric stress field

   Difference between REP_Setup_Compressible.xml and REP_Setup.xml:
   REP_Setup_Compressible.xml, takes the compressible component of the stress tensor into account
   REP_Setup.xml, assumes an incompressible stress, and is 1/3 faster than REP_Setup_Compressible
   -->

   <import mergeType="merge">
      <toolbox>Underworld</toolbox>
   </import>

   <struct name="components" mergeType="merge">
      <!-- TODO:
      * Define a real global gauss Swarm to use in non-linear, FEM only problems.
      Currently the storeConstitutiveMatrix ability will not work when only a simple
      gauss Swarm proxies in the constitutieMatrix class as the gaussMaterialSwarm.
      (This is because only a single cell of gauss points is defined for the whole domain)
      -->
      <!-- because compressible problems are usually nonLinear we require
      the constitutiveMatrix to be saved on the particles --> 
      <struct name="constitutiveMatrix" mergeType="merge">
         <param name="storeConstitutiveMatrix" mergeType="replace">1</param>
      </struct>
      <struct name="recoveredEpsDotField">
         <param name="Type">RecoveredFeVariable</param>
         <param name="RawField">StrainRateField</param>
         <param name="recoverPressure">false</param>
         <param name="recoverStrain">true</param>
         <param name="coeffInterpolation">1</param>
      </struct>
      <struct name="recoveredSigmaField">
         <param name="Type">RecoveredFeVariable</param>
         <param name="RawField">StrainRateField</param>
         <param name="recoverPressure">True</param>
         <param name="RawPressureField">PressureField</param>
         <param name="coeffInterpolation">1</param>
      </struct>
      <struct name="recoveredTauField">
         <param name="Type">RecoveredFeVariable</param>
         <param name="RawField">StrainRateField</param>
         <param name="recoverPressure">False</param>
         <param name="coeffInterpolation">1</param>
      </struct>
      <struct name="REP">
         <param name="Type">REP_Algorithm</param>
         <param name="ConstitutiveMatrix">constitutiveMatrix</param> 
         <list name="RepFieldList"> 
            <param>recoveredSigmaField</param> 
            <param>recoveredTauField</param> 
            <param>recoveredEpsDotField</param> 
         </list> 
      </struct>
      <!-- Operator FeVariables based on recovedSigmaField -->
      <struct name="recoveredSigmaInvariantField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">SymmetricTensor_Invariant</param>
         <param name="Operand">recoveredSigmaField</param>
      </struct>

      <!-- now the recoveredPressureField is calculated with:
      pressure = deviatoric stress - total stress ( OR p = tau - sigma)

      The problem with the StGermain Operator "Subtraction" is an object the
      size of the arguments is return, so a tensor is returned.
      The quick solution is to only take the first component of that tensor as
      the recoveredPressureField -->
      <struct name="dummyRecoveredPressureField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">Subtraction</param>
         <list name="Operands">
            <param>recoveredTauField</param>
            <param>recoveredSigmaField</param>
         </list>
      </struct>
      <struct name="recoveredPressureField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeFirstComponent</param>
         <param name="Operand">dummyRecoveredPressureField</param>
      </struct>
      <!-- now setup invariant fields -->  
      <struct name="recoveredTauInvariantField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">SymmetricTensor_Invariant</param>
         <param name="Operand">recoveredTauField</param>
      </struct>
      <struct name="recoveredEpsDotInvariantField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">SymmetricTensor_Invariant</param>
         <param name="Operand">recoveredEpsDotField</param>
      </struct>
      <!-- Individual components of sigma and tau.... good for debugging -->
      <struct name="SigmaXXField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeFirstComponent</param>
         <param name="Operand">recoveredSigmaField</param>
      </struct>         
      <struct name="SigmaYYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeSecondComponent</param>
         <param name="Operand">recoveredSigmaField</param>
      </struct>      
      <struct name="SigmaXYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeThirdComponent</param>
         <param name="Operand">recoveredSigmaField</param>
      </struct>
      <struct name="TauXXField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeFirstComponent</param>
         <param name="Operand">recoveredTauField</param>
      </struct>         
      <struct name="TauYYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeSecondComponent</param>
         <param name="Operand">recoveredTauField</param>
      </struct>      
      <struct name="TauXYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeThirdComponent</param>
         <param name="Operand">recoveredTauField</param>
      </struct>
      <struct name="EpsDotXXField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeFirstComponent</param>
         <param name="Operand">recoveredEpsDotField</param>
      </struct>         
      <struct name="EpsDotYYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeSecondComponent</param>
         <param name="Operand">recoveredEpsDotField</param>
      </struct>      
      <struct name="EpsDotXYField"> 
         <param name="Type">OperatorFeVariable</param>
         <param name="Operator">TakeThirdComponent</param>
         <param name="Operand">recoveredEpsDotField</param>
      </struct>
   </struct>
</StGermainData>
