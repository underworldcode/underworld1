This README file is designed to help the user in how to run the document creation script,
createDocs.py and related scripts.
**********************************

Running through scons:
----------------------
This is the desired way to run the script, and they have been designed to run best through this method.

To run, first follow the configure instructions for StGermain/Underworld project, e.g.

./configure.py 

then go to the base stgUnderworld directory and type 

scons doc

All the defaults have been setup to run through this method. 

The script will create a directory called 'doc' in the base directory. In this directory will be 2 sub-directories. These will be 'Codex' and 'Doxygen/html/' In each of these subdirectories will be a number of html files. The files to load are called 'index.html' eg. 'stgUnderworldE/Codex/index.html' Load these to access the created documents.

There are also the options:
scons doc-doxygen
scons doc-doxygenlite
scons doc-codex

to run each option separately. See the scons help for details on these options.

createDocs.py : 
---------------
This file is designed to be run with scons doc. Try running 'scons doc' from the stgUnderworld ( or equiv.) directory. 

If you cannot configure Underworld, createDocs.py can be used on it's own.

To run by itself, it HAS to be run from the base stgUnderworld directory: 
e.g. type:

~/stgUnderworld>> ./StGermain/script/createDocs.py

To get a help, type:
 
~/stgUnderworld>> ./StGermain/script/createDocs.py -h

To run with input options: 
~/stgUnderworld>> ./StGermain/script/createDocs.py METATYPE WEBPAGES EMAIL DOXYGENCONFIG

Defaults:
METATYPE: 'dtd' or 'xsd'
WEBPAGES: [['http://www.underworldproject.org','Underworld Home Page']]
EMAIL: 'underworld-users@vpac.org'
DOXYGENCONFIG: Doxyfile

This file is designed to have limited input options to make it easier to run as a batch job.

createDoxygen.py:
-----------------
This is a standalone python script to be run from this directory.
it creates just the Doxygen web pages. 

To run, type (from the StGermain/script dir):

./createDoxygen.py

for help and to look at input options, type:

./createDoxygen.py -h

Default output is in the stgUnderworld/doc/Doxygen/ subdirectory. In the html/ subdirectory, open index.html.

createCodex.py:
---------------
This is a standalone python script to be run from this directory. It creates the codex with the same default settings as createDocs.py. It is designed to be a quick way of creating the default codex without creating the Doxygen package as well. 
It is not as flexible as createHTMLDocuments.py for creating the codex.

To run, type (from the StGermain/script dir):

./createCodex.py

for help and to look at input options, type:

./createCodex.py -h

Default output is in the stgUnderworld/doc/Codex/ subdirectory. In this directory, open index.html.

createPlugins.py:
-----------------
DEPRECATED: NOW HANDLED IN DOXYGEN. This is a standalone python script to be run from this directory. It creates a Plugins website with the same format as the Codex. It is designed to show the location of all plugins and (TODO) brief descriptions on their function and how to use them.

To run, type (from the StGermain/script dir) :

./createPlugins.py

for help and to look at input options, type:

./createPlugins.py -h

Default output is in the stgUnderworld/doc/Plugins/ subdirectory. In this directory, open index.html.

createHTMLDocuments.py:
-----------------------
This is the standalone python script to create the Component Codex web pages. 
It has MANY input options, most of which have defaults, but not all.

It is recommended that the user runs the following first:

./createHTMLDocuments.py -h

which will give a list of the available options and their default values.


createDocument.py:
------------------
This is a class for document creation, with createHTMLDocuments.py being a child of this class. It cannot be run by itself.


Stg*.py and util.py:
--------------------
These are parsing scripts for meta files and scripts needed to accomplish this end.


headerfilter.py:
----------------
This is the python script used by Doxygen to make Stgermain/Underworld *.h header files readable by Doxygen. It enables classes, TODO's and meta file information to be included in the html output files.
It outputs to standard output when run. It CAN run on it's own, but this is only useful to debug the output.

pluginfilter.py:
----------------
ns 
This is the python script to add the necessary information to sort plugins by toolbox and to extract out their Plugin Names. This file CAN run on it's own, but is designed to be run by Doxygen to parse all *.c files. This maybe useful for debugging only.

tests/ :
---------
The tests directory contains python script/s to test whether the above python scripts are able to work.
At present, it only tests createDocs.py ( which also incorporates createCodex and createDoxygen.py files). They use the python unittest framework and are able to be run as standalone python functions.

