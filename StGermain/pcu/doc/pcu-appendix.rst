.. _pcu-appendix:

********
Appendix
********

These sections provide supplementary info about using PCU.

.. _pcu-appendix-template-suite:

Template Suite Sources
======================

.. highlight:: c

First, a template header file. These are generally short and simple and follow the pattern below::


   #ifndef Project_TemplateSuite_h
   #define Project_TemplateSuite_h
   void TemplateSuite( pcu_suite_t* suite );
   #endif

And now a template Suite C file::

   /*
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   **
   ** (Standard header message of Copyright and Authors for this project)
   **
   **~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   */
   #include <stdio.h>
   #include <stdlib.h>

   /* Add any additional necessary headers here */
   #include "pcu/pcu.h"

   /* Add appropriate StGermain/Project includes here */
   #include "TemplateSuite.h"

   typedef struct {

   /* This is where you should store any data
    * structures/variables needed in common by several tests.
    * It's quite valid to leave this empty though. */

   } TemplateSuiteData;


   void TemplateSuite_Setup( TemplateSuiteData* data ) {

   /* Set up any necessary data structures needed by all the
    * tests, and save them on the 'data' structure */

   }

   void TemplateSuite_Teardown( TemplateSuiteData* data ) {

   /* Clean up any data structures saved on the 'data' structure */

   }

   void TemplateSuite_TestCase( TemplateSuiteData* data ) {

   /* Here's an example test case */

   }

   /* This function must be defined by all Test Suites, as it
    * registers with PCU the Setup, Teardown functions,
    * the data structure passed to each test
    * case, and the test cases themselves */
   void TemplateSuite( pcu_suite_t* suite ) {

   /* Next 2 lines very rarely need changing other then renaming
    * Template to the name of the Suite */
      pcu_suite_setData( suite, TemplateSuiteData );
      pcu_suite_setFixtures( suite, TemplateSuite_Setup, TemplateSuite_Teardown );

      /* Here is where you register each test case. For multiple
       * test cases, just repeat the line below
       * but rename TemplateSuite_TestCase to the name of each test
       * case function */
      pcu_suite_addTest( suite, TemplateSuite_TestCase );
   }

.. highlight:: python

.. _pcu-appendix-scons-maintenance:

Relevant SCons Technical/Maintenance Info
=========================================

.. NB: This section could do with improving in future. IE linking to
   Relevant parts of UWA documentation about this.

The list of tests to run is generated by the “SConscript” file in each project.
Currently in the `StGermain/SConscript` file for example, towards the bottom
there is a section::

  # Build any test suites we might find.
  suites += env.Object(Glob(tst_dir + '/*Suite.c'))

and later these suites are used to create a `PCUTest` target::

    env.PCUTest('tests/testStGermain', suites,
        PCU_LIBHEADERS="#include <StGermain/StGermain.h>",
        PCU_SETUP="StGermain_Init(&argc, &argv);" \
        "stJournal->firewallProducesAssert = True;\n" \
        "stJournal->firewallProtected = True;\n",
        PCU_TEARDOWN="StGermain_Finalise();",
        LIBS=libs,
        PCU_EXP=tst_exp,
        PCU_INPUT=tst_input,
        PROJECT="StGermain")
