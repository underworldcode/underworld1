/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**
** Copyright (C), 2003, Victorian Partnership for Advanced Computing (VPAC) Ltd, 110 Victoria Street, Melbourne, 3053, Australia.
**
** Authors:
**   Stevan M. Quenette, Senior Software Engineer, VPAC. (steve@vpac.org)
**   Patrick D. Sunter, Software Engineer, VPAC. (pds@vpac.org)
**   Luke J. Hodkinson, Computational Engineer, VPAC. (lhodkins@vpac.org)
**   Siew-Ching Tan, Software Engineer, VPAC. (siew@vpac.org)
**   Alan H. Lo, Computational Engineer, VPAC. (alan@vpac.org)
**   Raquibul Hassan, Computational Engineer, VPAC. (raq@vpac.org)
**
**  This library is free software; you can redistribute it and/or
**  modify it under the terms of the GNU Lesser General Public
**  License as published by the Free Software Foundation; either
**  version 2.1 of the License, or (at your option) any later version.
**
**  This library is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
**  Lesser General Public License for more details.
**
**  You should have received a copy of the GNU Lesser General Public
**  License along with this library; if not, write to the Free Software
**  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
**
**
** $Id: testJournal-Dictionary.c 2745 2005-03-05 08:12:18Z SteveQuenette $
**
**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

#include <stdio.h>
#include <stdlib.h>

#include "pcu/pcu.h"
#include "StGermain/Base/Foundation/Foundation.h"
#include "StGermain/Base/IO/IO.h"
#include "StGermain/Base/Container/Container.h"
#include "StGermain/Base/Automation/Automation.h"
#include "RegisterFactorySuite.h"

typedef struct {
} RegisterFactorySuiteData;

void RegisterFactorySuite_Setup( RegisterFactorySuiteData* data ) {
}

void RegisterFactorySuite_Teardown( RegisterFactorySuiteData* data ) {
}
   

void RegisterFactorySuite_TestCreateAdd( RegisterFactorySuiteData* data ) {
   RegisterFactory* factory;
   NamedObject_Register* reg;

   factory = RegisterFactory_New();

   RegisterFactory_Register( factory, NamedObject_Register_Type, (void*)NamedObject_Register_New );
   RegisterFactory_Register( factory, Variable_Register_Type, (void*)Variable_Register_New );

   reg = (NamedObject_Register*)RegisterFactory_Create( factory, NamedObject_Register_Type );

   NamedObject_Register_Add( reg, TestObject_New( "a" ) );
   NamedObject_Register_Add( reg, TestObject_New( "b" ) );
   NamedObject_Register_Add( reg, TestObject_New( "c" ) );

   //Stg_Class_Print( factory, stream );

   Stg_Class_Delete( reg );
   Stg_Class_Delete( factory );
}


void RegisterFactorySuite( pcu_suite_t* suite ) {
   pcu_suite_setData( suite, RegisterFactorySuiteData );
   pcu_suite_setFixtures( suite, RegisterFactorySuite_Setup, RegisterFactorySuite_TestCreateAdd );
   pcu_suite_addTest( suite, RegisterFactorySuite_TestPushPopBasics );
}
