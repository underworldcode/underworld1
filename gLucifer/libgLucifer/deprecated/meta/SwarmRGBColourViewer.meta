<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">lucSwarmRGBColourViewer</param>
<param name="Author">Cecile Duboz</param>
<param name="Organisation">AuScope</param>
<param name="Project">gLucifer</param>
<param name="Location">./gLucifer/DrawingObjects/src/</param>
<param name="Project Web">http://mcc.monash.edu.au/gLucifer</param>
<param name="Copyright">Copyright (c) 2010, Monash University</param>
<param name="License">http://www.opensource.org/licenses/bsd-license.php</param>
<param name="Parent">lucSwarmViewer</param>
<param name="Reference"></param>
<param name="Summary"></param>
<param name="Description"> This is equivalent to the lucSwarmViewer but one can apply a different variable to each of the Red, Green and Blue channels individually. If a colour channel is not associated to any swarm variable, then the value defaults to the corresponding value set with the parameter "colour". The colour variable is not used.</param>

<!--Now the interesting stuff-->
<list name="Params">

</list>

<list name="Dependencies">
	<struct>
		<param name="Name">ColourRedVariable</param>
		<param name="Type">SwarmVariable</param>
		<param name="Essential">False</param>
		<param name="Description">The Swarm Variable by which you may define the red value of the colour of the particle.</param>
	</struct>
	<struct>
		<param name="Name">ColourGreenVariable</param>
		<param name="Type">SwarmVariable</param>
		<param name="Essential">False</param>
		<param name="Description">The Swarm Variable by which you may define the green value of the colour of the particle.</param>
	</struct>
	<struct>
		<param name="Name">ColourBlueVariable</param>
		<param name="Type">SwarmVariable</param>
		<param name="Essential">False</param>
		<param name="Description">The Swarm Variable by which you may define the blue value of the colour of the particle.</param>
	</struct>
	<struct>
		<param name="Name">RedColourMap</param>
		<param name="Type">lucColourMap</param>
		<param name="Essential">False</param>
		<param name="Description">Optional ColourMap object, only red component of colours in map will be used. Allows colour range and variable minimum and maximum to be specified. If not provided will scale the full variable range to the full range of red values.</param>
	</struct>
	<struct>
		<param name="Name">BlueColourMap</param>
		<param name="Type">lucColourMap</param>
		<param name="Essential">False</param>
		<param name="Description">Optional ColourMap object, only blue component of colours in map will be used. Allows colour range and variable minimum and maximum to be specified. If not provided will scale the full variable range to the full range of blue values.</param>
	</struct>
	<struct>
		<param name="Name">GreenColourMap</param>
		<param name="Type">lucColourMap</param>
		<param name="Essential">False</param>
		<param name="Description">Optional ColourMap object, only blue component of colours in map will be used. Allows colour range and variable minimum and maximum to be specified. If not provided will scale the full variable range to the full range of blue values.</param>
	</struct>
</list>

<!-- Add an exmaple XML if possible -->
<param name="Example">
<![CDATA[
	<struct name="yteparticleDotsrgb">
		<param name="Type">lucSwarmRGBColourViewer</param>
		<param name="Swarm">materialSwarm</param>
		<param name="MaskVariable">materialSwarm-HasYielded</param>
		<param name="maskValue">1</param>
		<param name="maskType">EqualTo</param>
		<param name="OpacityVariable">materialSwarm-YieldTypeOpacity</param>
		<param name="ColourRedVariable">materialSwarm-YieldTypeExtension</param>
		<param name="ColourBlueVariable">materialSwarm-YieldTypeCompression</param>
		<param name="ColourGreenVariable">materialSwarm-YieldTypeShear</param>
		<param name="pointSize">2.0</param>
	</struct>
]]>
</param>

</StGermainData>
