<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">lucViewport</param>
<param name="Author">...</param>
<param name="Organisation">AuScope</param>
<param name="Project">gLucifer</param>
<param name="Location">./gLucifer/Base/src/</param>
<param name="Project Web">http://mcc.monash.edu.au/gLucifer</param>
<param name="Copyright">Copyright (c) 2010, Monash University</param>
<param name="License">http://www.opensource.org/licenses/bsd-license.php</param>
<param name="Parent">Stg_Component</param>
<param name="Reference">...</param>
<param name="Summary">...</param>
<param name="Description">Describes a scene of several lucDrawingObjects which is drawn in a subset of a lucWindow</param>

<!--Now the interesting stuff-->
<list name="Params">
	<struct>
		<param name="Name">title</param>
		<param name="Type">String</param>
		<param name="Default"></param>
		<param name="Description">Title to display in this viewport (not currently implemented, will be replacing lucTitle object)</param>
	</struct>
	<struct>
		<param name="Name">drawTime</param>
		<param name="Type">Bool</param>
		<param name="Default">True</param>
		<param name="Description">If True, then the time will be drawn at the top of the viewport (not currently implemented, will be replacing lucTimeStep object).</param>
	</struct>
	<struct>
		<param name="Name">compositeEachObject</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, then when this viewport will be compositied between each object being drawn. This means the rendering will be slower but the order of the drawing of the objects will be conserved. If False, then the compositing will happen after all the objects have been drawn.</param>
	</struct>
	<struct>
		<param name="Name">nearClipPlane</param>
		<param name="Type">Double</param>
		<param name="Default">(Calculated - camera focal length / 10.0)</param>
		<param name="Description">Specifies the distance from the camera to the near clipping plane, in front of which nothing will be drawn.</param>
	</struct>
	<struct>
		<param name="Name">farClipPlane</param>
		<param name="Type">Double</param>
		<param name="Default">(Calculated - camera focal length * 10.0)</param>
		<param name="Description">Specifies the distance from the camera to the far clipping plane, behind which nothing will be drawn.</param>
	</struct>
	<struct>
		<param name="Name">scaleX</param>
		<param name="Type">Double</param>
		<param name="Default">1.0</param>
		<param name="Description">Model scaling factor in X direction.</param>
	</struct>
	<struct>
		<param name="Name">scaley</param>
		<param name="Type">Double</param>
		<param name="Default">1.0</param>
		<param name="Description">Model scaling factor in Y direction.</param>
	</struct>
	<struct>
		<param name="Name">scaleZ</param>
		<param name="Type">Double</param>
		<param name="Default">1.0</param>
		<param name="Description">Model scaling factor in Z direction.</param>
	</struct>
	<struct>
		<param name="Name">margin</param>
		<param name="Type">Int</param>
		<param name="Default">32</param>
		<param name="Description">Margin in pixels used when performing camera autoZoom. The model will fill the box defined by the viewport size minus this surrounding margin.</param>
	</struct>
</list>

<list name="Dependencies">
	<struct>
		<param name="Essential">True</param>
		<param name="Name">Camera</param>
		<param name="Type">lucCamera</param>
		<param name="Description">The camera from which every drawing object in the viewport will be viewed from.</param>
	</struct>
	<struct>
		<param name="Essential">True</param>
		<param name="Name">DrawingObject</param>
		<param name="Type">lucDrawingObject</param>
		<param name="Description">A list of drawing objects that will be drawn in this viewport.</param>
	</struct>	
</list>

<!-- Add an example XML if possible -->
<param name="Example"><![CDATA[
	<struct name="StressInvariantVP">
		<param name="Type">lucViewport</param>
		<param name="Camera">camera</param>
		<list name="DrawingObject">
			<param>stressInvMap</param>
			<param>border</param>
			<param>stressInvColourBar</param>
		</list>
		<param name="drawTitle">True</param>
		<param name="compositeEachObject">False</param>
		<param name="farClipPlane">0.1</param>
		<param name="farClipPlane">40.0</param>
	</struct>]]>
</param>

</StGermainData>
