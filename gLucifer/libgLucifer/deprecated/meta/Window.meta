<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">lucWindow</param>
<param name="Author">Robert Turnbull</param>
<param name="Organisation">AuScope</param>
<param name="Project">gLucifer</param>
<param name="Location">./gLucifer/Base/src/</param>
<param name="Project Web">http://mcc.monash.edu.au/gLucifer</param>
<param name="Copyright">Copyright (c) 2010, Monash University</param>
<param name="License">http://www.opensource.org/licenses/bsd-license.php</param>
<param name="Parent">Stg_Component</param>
<param name="Reference"></param>
<param name="Summary">...</param>
<param name="Description">An abstract which is a collection of viewports that will be drawn in one window and written as one image at every dump output step.</param>

<!--Now the interesting stuff-->


<list name="Params">
	<struct>
		<param name="Name">width</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">400</param>
		<param name="Description">The horizontal length of the window.</param>
	</struct>
	<struct>
		<param name="Name">height</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">400</param>
		<param name="Description">The vertical length of the window.</param>
	</struct>
	<struct>
		<param name="Name">backgroundColour</param>
		<param name="Type">String</param>
		<param name="Default">"white"</param>
		<param name="Description">The colour that will fill the window before the viewports are drawn.</param>
	</struct>
	<struct>
		<param name="Name">interactive</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, then the window will pop up and the user can interact with it before the image is saved and the calculation continues. If False, then the window will render, the image will save and the calculation will continue without hesitation. Some implementations of lucWindow may pop up a window even for non-interactive windows and others may not have an interactive mode at all.</param>
	</struct>
	<struct>
		<param name="Name">continuous</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, and interactive mode is on, the window will open but calculation will continue for the next timestep automatically without waiting for user interaction but updating the displayed image whenever a new one is available. Pressing the 'o' key toggles this mode back to normal interactive mode.</param>
	</struct>
	<struct>
		<param name="Name">isTimedOut</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, and interactive mode is on, the window will time out after maxIdleTime seconds have elapsed (default is 600).</param>
	</struct>

	<struct>
		<param name="Name">maxIdleTime</param>
		<param name="Type">Double</param>
		<param name="Default">600.0</param>
		<param name="Description">The maximum time (in seconds) that the window can be open without user input. This is so that the user is warned when running the program with interactive turned on but without being aware.</param>
	</struct>
	<struct>
		<param name="Name">antialias</param>
		<param name="Type">Bool</param>
		<param name="Default">True</param>
		<param name="Description">If True multisample anti-aliasing will be enabled where the hardware and graphics library allows it. This effectively smooths the edges of lines and polygons for a much nicer looking output. Set to False to disable anti-aliasing. Not available for OSMesa windows, to reduce aliasing in OSMesa, render a larger window and downsample manually.</param>
	</struct>
	<struct>
		<param name="Name">skipFirstTimestep</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True then no rendering or image output will be done in this window when the timestep is 0.</param>
	</struct>
	<struct>
		<param name="Name">rotateSteps</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">0</param>
		<param name="Description">If a number of steps from 2-360 is provided here the model will be rotated this amount of steps and an image output at every step, only rotation about the Y-axis is currently supported.</param>
	</struct>
</list>

<list name="Dependencies">
	<struct>
		<param name="Essential">True</param>
		<param name="Name">Viewport</param>
		<param name="Type">lucViewport</param>
		<param name="Description">A list of viewports to be drawn in this window. These must be given in order of them laid out in the window. For each line entered in the list, each viewport mentioned in that line will be laid out in a horizontal row (See wiki page for example).</param>
	</struct>
	<struct>
		<param name="Essential">True</param>
		<param name="Name">context</param>
		<param name="Type">AbstractContext</param>
		<param name="Description">The window needs information about the context so that it can attach itself onto the AbstractContext_EP_DumpClass entry point.</param>
	</struct>
	<struct>
		<param name="Essential">True</param>
		<param name="Name">RenderingEngine</param>
		<param name="Type">lucRenderingEngine</param>
		<param name="Description">The rendering engine that you want to render the viewports in this window.</param>
	</struct>
	<struct>
		<param name="Essential">True</param>
		<param name="Name">OutputFormat</param>
		<param name="Type">lucOutputFormat</param>
		<param name="Description">A list of formats that you want the final images to be saved in. For each output format registered on a window, an image will be created with the name ./OUTPUT_PATH/WINDOW_NAME.TIMESTEP.EXTENSION (e.g. ./output/window.00050.png).</param>
	</struct>	
	<struct>
		<param name="Essential">True</param>
		<param name="Name">WindowInteraction</param>
		<param name="Type">lucWindowInteraction</param>
		<param name="Description">A list of window interaction objects that you want to use with this window. The default lucWindowInteraction will be created with each lucWindow and registered automatically.</param>
	</struct>
	<struct>
		<param name="Essential">False</param>
		<param name="Name">database</param>
		<param name="Type">lucDatabase</param>
		<param name="Description">Optional database component to export this window's geometry data to.</param>
	</struct>
</list>
<!-- Add an exmaple XML if possible -->
<param name="Example">N/A</param>

</StGermainData>
