<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">lucDrawingObject</param>
<param name="Author">Robert Turnbull</param>
<param name="Organisation">AuScope</param>
<param name="Project">gLucifer</param>
<param name="Location">./gLucifer/Base/src/</param>
<param name="Project Web">http://mcc.monash.edu.au/gLucifer</param>
<param name="Copyright">Copyright (c) 2010, Monash University</param>
<param name="License">http://www.opensource.org/licenses/bsd-license.php</param>
<param name="Parent">Stg_Component</param>
<param name="Reference">N/A</param>
<param name="Summary">...</param>
<param name="Description">An abstract class which sets up an interface for objects to be drawn inside viewports</param>

<!--Now the interesting stuff-->
<list name="Params">
	<struct>
		<param name="Name">cullBackFace</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, then back face culling of polygons is enabled, back faces will not be drawn.</param>
	</struct>
	<struct>
		<param name="Name">cullFrontFace</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, then front face culling of polygons is enabled, front faces will not be drawn.</param>
	</struct>
	<struct>
		<param name="Name">lit</param>
		<param name="Type">Bool</param>
		<param name="Default">True</param>
		<param name="Description">If True, then lighting is switched on when drawing this object, otherwise is switched off.</param>
	</struct>
	<struct>
		<param name="Name">wireframe</param>
		<param name="Type">Bool</param>
		<param name="Default">False</param>
		<param name="Description">If True, then polygons will be drawn as edges only and not filled solid shapes.</param>
	</struct>
	<struct>
		<param name="Name">colour</param>
		<param name="Type">String</param>
		<param name="Default">"black"</param>
		<param name="Description">The colour of the object. (If a lucColourMap is given - then this colour will not be used)</param>
	</struct>
	<struct>
		<param name="Name">opacity</param>
		<param name="Type">Double</param>
		<param name="Default">-1.0</param>
		<param name="Description">Opacity override, sets a global opacity value that overrides any alpha values set on colours or colourMaps, default is to disable the override and use colour values.</param>
	</struct>
	<struct>
		<param name="Name">lineWidth</param>
		<param name="Type">Double</param>
		<param name="Default">1.0</param>
		<param name="Description">The width of each contour line.</param>
	</struct>
</list>

<list name="Dependencies">
	<struct>
		<param name="Essential">No</param>
		<param name="Name">ColourMap</param>
		<param name="Type">lucColourMap</param>
		<param name="Description">You may colour each of the vertices of the object with a colour map if you specify it here. This will override the 'colour' given as a parameter.</param>
	</struct>
</list>
<!-- Add an exmaple XML if possible -->
<param name="Example">N/A.</param>

</StGermainData>
