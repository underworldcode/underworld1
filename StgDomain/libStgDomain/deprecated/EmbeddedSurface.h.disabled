/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
**
** Copyright (C), 2003, Victorian Partnership for Advanced Computing (VPAC) Ltd, 110 Victoria Street, Melbourne, 3053, Australia.
**
** Authors:
**	Stevan M. Quenette, Senior Software Engineer, VPAC. (steve@vpac.org)
**	Patrick D. Sunter, Software Engineer, VPAC. (pds@vpac.org)
**	Luke J. Hodkinson, Computational Engineer, VPAC. (lhodkins@vpac.org)
**	Siew-Ching Tan, Software Engineer, VPAC. (siew@vpac.org)
**	Alan H. Lo, Computational Engineer, VPAC. (alan@vpac.org)
**	Raquibul Hassan, Computational Engineer, VPAC. (raq@vpac.org)
**
**  This library is free software; you can redistribute it and/or
**  modify it under the terms of the GNU Lesser General Public
**  License as published by the Free Software Foundation; either
**  version 2.1 of the License, or (at your option) any later version.
**
**  This library is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
**  Lesser General Public License for more details.
**
**  You should have received a copy of the GNU Lesser General Public
**  License along with this library; if not, write to the Free Software
**  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
**
*/
/** \file
**  Role:
**
** Assumptions:
**
** Comments:
**
** $Id: EmbeddedSurface.h 3462 2006-02-19 06:53:24Z WalterLandry $
**
**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
#ifndef __StgDomain_Utils_EmbeddedSurface_h__
#define __StgDomain_Utils_EmbeddedSurface_h__


	extern const Type EmbeddedSurface_Type;


	#define __EmbeddedSurface \
		/* General info */ \
		__Stg_Class \
		Mesh			*surface; \
		\
		/* Virtual info */ \
		\
		/* EmbeddedSurface info */ \
		Edge_List		edge; \
		Edge_Index		edgeCount; \
		EdgeFaces		*edgeElement; \
		\
		Plane			*elementPlane; \
		TriangleBoundary	*elementBoundary;
	struct _EmbeddedSurface { __EmbeddedSurface };
	
	
	/*--------------------------------------------------------------------------------------------------------------------------
	** Constructor
	*/
	
	EmbeddedSurface *EmbeddedSurface_New(Mesh *surface);
	
	EmbeddedSurface *_EmbeddedSurface_New(SizeT			_sizeOfSelf,
					      Type			type,
					      Stg_Class_DeleteFunction*	_delete,
					      Stg_Class_PrintFunction*	_print,
					      Mesh			*surface);
	
	void EmbeddedSurface_Init(EmbeddedSurface *self);
	
	void _EmbeddedSurface_Init(EmbeddedSurface *self);
	
	
	/*----------------------------------------------------------------------------------------------------------------------------------
	** Generic virtual functions
	*/
	
	void _EmbeddedSurface_Delete(void *embeddedSurface);
	
	void _EmbeddedSurface_Print(void *embeddedSurface);
	
	
	/*----------------------------------------------------------------------------------------------------------------------------------
	** Utility functions
	*/
	
	#define ES_IntersectionMax(self) \
		(self)->surface->elementDomainCount
	
	Element_GlobalIndex EmbeddedSurface_BuildIntersection(EmbeddedSurface *self, Element_GlobalIndex *intersect);
	
	double EmbeddedSurface_DistanceToPoint(EmbeddedSurface *self, Coord point);


#endif
