<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">DomainContext</param>
<param name="Organisation">VPAC</param>
<param name="Project">StgDomain</param>
<param name="Location">./StgDomain/Utils/src/</param>
<param name="Project Web">http://www.stgermainproject.org/StgDomain.html</param>
<param name="Copyright">StGermain Framework. Copyright (C) 2003-2005 VPAC.</param>
<param name="License">The Gnu Lesser General Public License v2.1 - http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html</param>
<param name="Parent">AbstractContext</param>
<param name="Description">Builds on the AbstractContext by adding a field variable register as well as recorded how many dimensions the problem is in.</param>

<!--Now the interesting stuff-->
<list name="Params">
	<struct>
		<param name="Name">dim</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">2</param>
		<param name="Description">How many dimensions we are working in (either 2 or 3). This parameter is taken form the root dictionary.</param>
	</struct>
   
</list>

<list name="Dependencies">
   <struct>
			<param name="Essential">False</param>
			<param name="Name">Scaling</param>
			<param name="Type">Scaling</param>
			<param name="Description">An optional scaling component that will define output units for this context. If not supplied as input the context will search for a component called 'default_scaling'. If the Scaling component is not found the code will run, but user scaling of output fields will not work.</param>
	</struct>
</list>
<!-- Add an exmaple XML if possible -->
<param name="Example">N/A</param>

</StGermainData>
