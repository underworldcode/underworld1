/* Inherit from a parent class and clear any pre-existing 
   class definitions. */
#include INHERIT( StGermain/Base/Foundation/NewClass )
#include "StGermain/Base/Foundation/ClassClear.h"


/*
** Class parameter declarations. Here we need to define:
**   CLASSDIR and
**   CLASSNAME.
**
** We can optionally define:
**   PREFIX, 
**   PARENTDIR and
**   PARENT.
*/

#define PARENTDIR StGermain/Base/Foundation
#define PARENT NewClass
#define CLASSDIR StgDomain/Utils
#define CLASSNAME NewRemesher

/* Do standard class initialisation. */
#include "StGermain/Base/Foundation/ClassSetup.h"


/*
** Declare all class members using the MEMBER command.  Accepted
** parameters are:
**   ( <type>, <name> )
*/

MEMBER( Mesh*, mesh )


/*
** Declare all virtual, abstract and overridden methods.
**
** Available method types are:
**   VIRTUALMETHOD, 
**   VOIDVIRTUALMETHOD, 
**   ABSTRACTMETHOD, 
**   VOIDABSTRACTMETHOD, 
**   OVERRIDE and
**   VOIDOVERRIDE.
**
** All method types accept the following parameters:
**   ( <name>, 
**     <return type>, 
**     <arg definitions>, 
**     <arg names> )
**
** where:
**   <name> is the method name, 
**   <return type> is the type to be returned by the method, 
**   <arg definitions> is a parenthesised list of method arguments and 
**   <arg names> is a parenthesised list of method argument names.
**
** Note that any virtual, abstract or overridden method that returns
** void must be declared as VOIDVIRTUALMETHOD, VOIDABSTRACTMETHOD or
** VOIDOVERRIDE.
*/

VOIDOVERRIDE( Init, void, 
	      (void* self), 
	      (self) )

VOIDOVERRIDE( Copy, void, 
	      (void* self, const void* op), 
	      (self, op) )

VOIDOVERRIDE( Print, void, 
	      (const void* self, Stream* stream), 
	      (self, stream) )

VOIDABSTRACTMETHOD( Remesh, void, 
		    (void* self), 
		    (self) )


/*
** Declare all local methods using the METHOD command.  Local method 
** declarations accept the same parameters as virtual methods, however 
** there are no separate declarations required for void return types.
*/

METHOD( SetMesh, void, 
	(void* self, void* mesh), 
	(self, mesh) )

METHOD( GetMesh, Mesh*, 
	(const void* self), 
	(self) )
